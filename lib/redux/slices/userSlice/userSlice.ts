/* Core */
import { createSlice, type PayloadAction } from "@reduxjs/toolkit"

/* Instruments */
import { getUsers } from "./thunks"
import { User } from "@/types"

const initialState: UserSliceState = {
  status: "idle",
  value: [],
}

export const userSlice = createSlice({
  name: "user",
  initialState,
  // The `reducers` field lets us define reducers and generate associated actions
  reducers: {},
  // The `extraReducers` field lets the slice handle actions defined elsewhere,
  // including actions generated by createAsyncThunk or in other slices.
  extraReducers: (builder) => {
    builder
      .addCase(getUsers.pending, (state) => {
        state.status = "loading"
      })
      .addCase(getUsers.fulfilled, (state, action) => {
        state.status = "idle"
        state.value = action.payload
      })
  },
})

export interface UserSliceState {
  status: "idle" | "loading" | "failed"
  value: User[]
}
